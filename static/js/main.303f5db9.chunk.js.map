{"version":3,"sources":["assets/img/react.svg","assets/img/js.svg","assets/img/css3.svg","assets/img/sass.svg","assets/img/git.svg","assets/img/memory.png","assets/img/weather.png","assets/img/timer.png","assets/img/drum.png","assets/img/quote.png","components/ProjectBtn/ProjectBtn.js","containers/Cards/Card.js","components/logos/ReactIcon.js","components/logos/JsIcon.js","components/logos/CssIcon.js","components/logos/SassIcon.js","components/logos/GitIcon.js","containers/Cards/Cards.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","projectBtn","props","className","onClick","clicked","children","card","frontList","map","cur","i","key","id","backList","style","background","colorOne","colorTwo","opacity","title","src","alt","event","console","log","target","value","changeProjectHandler","Icon","reactIcon","jsIcon","cssIcon","sassIcon","gitIcon","Cards","state","cardList","memory","languages","href","rel","weather","timer","drum","quote","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.303f5db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.092e0882.svg\";","module.exports = __webpack_public_path__ + \"static/media/js.5654e128.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3.4be6aceb.svg\";","module.exports = __webpack_public_path__ + \"static/media/sass.416d7a89.svg\";","module.exports = __webpack_public_path__ + \"static/media/git.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/memory.9ac78a48.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.42265df8.png\";","module.exports = __webpack_public_path__ + \"static/media/timer.fe93867c.png\";","module.exports = __webpack_public_path__ + \"static/media/drum.55553ac1.png\";","module.exports = __webpack_public_path__ + \"static/media/quote.2cf82c2d.png\";","import React from 'react';\nimport './ProjectBtn.scss';\n\nconst projectBtn = (props) => {\n    return (\n        <button className='projectBtn' onClick={props.clicked}>{props.children}</button>\n    );\n}\n\nexport default projectBtn;","import React from 'react';\nimport './Card.scss';\nimport ProjectBtn from '../../components/ProjectBtn/ProjectBtn';\n\nconst card = (props) => {\n    let changeProjectHandler = (event) => {\n        console.log(event.target.value);\n    }\n\nlet frontList = props.frontList.map((cur, i) => <li key={i} className='cardFront--list--items' id={`frontId-${i+1}`}>{cur}</li>);\n    let backList = props.backList.map((cur, i) => <li key={i} className='cardBack--list--items' id={`backId-${i+1}`}>{cur}</li>);\n\n    return (\n        <div className='card'>\n            <div className='cardFront side' style={{background: `linear-gradient(41deg, ${props.colorOne}, ${props.colorTwo})`, opacity: '.75'}} > \n                <div className='cardFront--top' >\n                    <div className='cardFront--top--title'>{props.title}</div>\n                    <img className='cardFront--top--img' src={props.src} alt='card'></img>\n                </div>\n                <ul className='cardFront--list'>\n                    {frontList}\n                </ul>\n            </div>\n            <div className='cardBack side' style={{background: `linear-gradient(20deg, ${props.colorTwo}, ${props.colorOne})`}} >\n                <ul className='cardBack--list'>\n                    {backList}\n                    <ProjectBtn clicked={(event) => changeProjectHandler(event)} > View {props.title} </ProjectBtn>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default card;","import React from 'react';\nimport './ReactIcon.scss';\nimport reactIcon from '../../assets/img/react.svg';\n\nconst Icon = (props) => {\n    return (\n        <div className='iconContainer'>\n            <img className='react' src={reactIcon} alt='react logo'></img>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Icon;","import React from 'react';\nimport './JsIcon.scss';\nimport jsIcon from '../../assets/img/js.svg';\n\nconst Icon = (props) => {\n    return (\n    <div className='iconContainer'>\n        <img className='js' src={jsIcon} alt='react logo'></img>\n        {props.children}\n    </div>\n    );\n};\n\nexport default Icon;","import React from 'react';\nimport './CssIcon.scss';\nimport cssIcon from '../../assets/img/css3.svg';\n\nconst Icon = (props) => {\n    return (\n    <div className='iconContainer'>\n        <img className='css' src={cssIcon} alt='react logo'></img>\n        {props.children}\n    </div>\n    );\n};\n\nexport default Icon;","import React from 'react';\nimport './SassIcon.scss';\nimport sassIcon from '../../assets/img/sass.svg';\n\nconst Icon = (props) => {\n    return (\n        <div className='iconContainer'>\n            <img className='sass' src={sassIcon} alt='sass logo'></img>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Icon;","import React from 'react';\nimport './GitIcon.scss';\nimport gitIcon from '../../assets/img/git.svg';\n\nconst Icon = (props) => {\n    return (\n        <div className='gitContainer'>\n            <img className='git' src={gitIcon} alt='git logo'></img>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Icon;","import React, {Component} from 'react';\nimport './Cards.scss';\nimport Card from './Card';\n\nimport ReactIcon from '../../components/logos/ReactIcon';\n//import NodeJsIcon from '../../components/logos/NodeJsIcon';\nimport JsIcon from '../../components/logos/JsIcon'; \n//import HtmlIcon from '../../components/logos/HtmlIcon';\nimport CssIcon from '../../components/logos/CssIcon';\nimport SassIcon from '../../components/logos/SassIcon';\nimport GitIcon from '../../components/logos/GitIcon';\n\nimport memory from '../../assets/img/memory.png';\nimport weather from '../../assets/img/weather.png';\nimport timer from '../../assets/img/timer.png';\nimport drum from '../../assets/img/drum.png';\nimport quote from '../../assets/img/quote.png';\n\n\nclass Cards extends Component {\n    state = {\n        cardList: [\n            {title: 'Memory Cards', src: memory, languages:[<SassIcon><span className='icon-text'>Sass</span></SassIcon>, <JsIcon><span className='icon-text'>JavaScript</span></JsIcon>, <ReactIcon><span className='icon-text'>React</span></ReactIcon>], backList: [<a href='https://github.com/MrJoshua2282/memoryCards' target='_blank' rel=\"noopener noreferrer\"><GitIcon/></a>, 'Each player will be given two picks per turn. If the current player has a match, the current player continues. Otherwise, the next player has an opportunity to build off of the previous knowledge.'], colorOne: '#C6FFDD', colorTwo: '#f7797d'},\n\n            {title: 'Weather Forecast', src: weather, languages:[<CssIcon><span className='icon-text'>Css</span></CssIcon>, <JsIcon><span className='icon-text'>JavaScript</span></JsIcon>, <ReactIcon><span className='icon-text'>React</span></ReactIcon>], backList: [<a href='https://github.com/MrJoshua2282/weatherApp' target='_blank' rel=\"noopener noreferrer\"><GitIcon/></a>, 'Displaying the five-day forecast for any zip-code and containing temperature conditions in both Celsius and Fahrenheit.'], colorOne: 'white', colorTwo: '#039be5'},\n\n            {title: 'Loop Timer', src: timer, languages:[<CssIcon><span className='icon-text'>Css</span></CssIcon>, <JsIcon><span className='icon-text'>JavaScript</span></JsIcon>, <ReactIcon><span className='icon-text'>React</span></ReactIcon>], backList: [<a href='https://github.com/MrJoshua2282/loopTimer' target='_blank' rel=\"noopener noreferrer\"><GitIcon/></a>, 'Containing a number of convenient features to allow not only aesthetic pleasure but ease and comfort expected from any timer.'], colorOne: '#8360c3', colorTwo: '#2ebf91'},\n\n            {title: 'Drum Board', src: drum, languages:[<CssIcon><span className='icon-text'>Css</span></CssIcon>, <JsIcon><span className='icon-text'>JavaScript</span></JsIcon>, <ReactIcon><span className='icon-text'>React</span></ReactIcon>], backList: [<a href='https://github.com/MrJoshua2282/drumApp' target='_blank' rel=\"noopener noreferrer\"><GitIcon/></a>, 'With a simple stroke of a button, the user can effortlessly change from one set of sounds to another. Using either the mouse or the keyboard, the user can be entertained with up to 18 different sounds.'], colorOne: '#11998e', colorTwo: '#38ef7d'},\n\n            {title: 'Quote Machine', src: quote, languages:[<CssIcon><span className='icon-text'>Css</span></CssIcon>, <JsIcon><span className='icon-text'>JavaScript</span></JsIcon>, <ReactIcon><span className='icon-text'>React</span></ReactIcon>], backList: [<a href='https://github.com/MrJoshua2282/quoteMachine' target='_blank' rel=\"noopener noreferrer\"><GitIcon/></a>, 'Be uplifted with a multitude of inspiring quotes. Share with friends and family on social media.'], colorOne: '#ef32d9', colorTwo: '#89fffd'},\n        ]\n    }\n\n    // changeProjectHandler = () => {\n    //     console.log('Yessss');\n    // }\n\n    render() {\n        let card = this.state.cardList.map((cur, i) => {\n            return (\n                <Card key={i} \n                title={cur.title}\n                src={cur.src}\n                frontList={cur.languages}\n                backList={cur.backList}\n                colorOne={cur.colorOne}\n                colorTwo={cur.colorTwo}\n                />\n            );\n        });\n        return (\n            <div className='projects'>\n                {card}\n                \n                {/* <ProjectBtn onClick={this.changeProjectHandler} /> */}\n            </div>\n        );\n    }\n}\n\nexport default Cards;","import React, {Component} from 'react';\nimport './App.scss';\n\nimport Cards from './Cards/Cards';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='header'>\n          <div className='header-image'>\n            <p className='quote'> “If a thing’s worth doing at all, it’s worth doing well.”\n            <br></br>\n              <span className='author'>— Evelyn Waugh</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"backgroundGradient\">\n          <Cards /> \n          <div>current project</div>         \n          <div>Contact</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}